name: Salesforce Delta Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SFDX_CLI_VERSION: latest

jobs:
  deploy:
    name: Delta Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for git diff

      - name: Setup Salesforce CLI
        uses: salesforce-actions/setup-sfdx@v1
        with:
          sfdx-cli-version: ${{ env.SFDX_CLI_VERSION }}

      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.SF_JWT_KEY }}" > server.key
          sfdx auth:jwt:grant \
            --clientid ${{ secrets.SF_CONSUMER_KEY }} \
            --jwtkeyfile server.key \
            --username ${{ secrets.SF_USERNAME }} \
            --instanceurl ${{ secrets.SF_INSTANCE_URL }} \
            --setalias my-org

      - name: Get changed files
        id: changed-files
        run: |
          # Get files changed between current and previous commit
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD -- force-app/)
          
          # Filter only Salesforce metadata files
          FILTERED_FILES=$(echo "$CHANGED_FILES" | grep -E '\.(cls|trigger|page|component|object|flow|layout|profile|permissionset|xml)$')
          
          echo "Changed files:"
          echo "$FILTERED_FILES"
          
          # Set output for next steps
          if [ -z "$FILTERED_FILES" ]; then
            echo "::set-output name=has_changes::false"
            echo "No Salesforce files changed - skipping deployment"
          else
            echo "::set-output name=file_list::$FILTERED_FILES"
            echo "::set-output name=has_changes::true"
          fi

      - name: Validate Changes (PR)
        if: github.event_name == 'pull_request' && steps.changed-files.outputs.has_changes == 'true'
        run: |
          sfdx force:source:deploy \
            --checkonly \
            --sourcepath "${{ steps.changed-files.outputs.file_list }}" \
            --targetusername my-org \
            --testlevel RunLocalTests \
            --wait 30

      - name: Deploy Changes (Push to Main)
        if: github.event_name == 'push' && steps.changed-files.outputs.has_changes == 'true'
        run: |
          sfdx force:source:deploy \
            --sourcepath "${{ steps.changed-files.outputs.file_list }}" \
            --targetusername my-org \
            --testlevel RunLocalTests \
            --wait 30
